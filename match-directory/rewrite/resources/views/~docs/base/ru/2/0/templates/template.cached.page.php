<?php

use Phphleb\Docs\Src\Code;
use Phphleb\Docs\Src\Link;
use Phphleb\Docs\Src\Paragraph;

?>
<?= Paragraph::h1('Кешируемые шаблоны') ?>

<p>
    Кроме встроенных во фреймворк функций, позволяющих встраивать <a href="<?= Link::url('docs.2.0.template.standard.page'); ?>">стандартные шаблоны</a>, есть возможность помещать содержимое шаблонов в кеш.
</p>
<p>
    Кеширование может как ускорить некоторые части приложения, так и замедлить, если эти части работают и так быстро.
    Учитывая, что шаблон должен только отдавать данные, а не заниматься сложными вычислениями, кеширование должно проводиться уровнем выше.
    Однако, для сугубо специализированных случаев, особенно, когда в шаблон вставлено много других шаблонов и из-за этого может быть лишнее потребление ресурсов, есть смысл помещать этот шаблон в кеш на небольшой промежуток времени.
</p>
<p>
    Кеш шаблонов не подходит для динамически меняющихся и внутренних страниц сайта, для которых нужна авторизация, так как пользователь за время жизни кеша может выйти из профиля, но на странице этого не будет видно.
    Лучше всего его использовать для статических страниц сайта, изменения на которых производятся редко и в тех частях, где нет критичных для безопасности данных условий (таких, как авторизация).
</p>

<?= Paragraph::h2('Функция insertCacheTemplate()') ?>

<p>
   Эта функция аналогична insertTemplate(), но содержит дополнительный аргумент sec, в котором можно указать, на какое время в секундах установить кеширование.
    По истечении этого времени очередной запрос к шаблону изменит его в кеше на это же количество секунд (на минуту в примере).
</p>

<?= Code::fromFile('@views/docs/code/template/insert.cached.template.php');  ?>

<p>
    Необходимо быть осторожными с данными, которые поступают в кешируемый шаблон, а также теми, что могут получаться внутри шаблона из внешних источников.<br>
    В первом случае будет создан новый кеш, исходя из хеша изменившихся данных, что приведет к разрастанию места на диске, занятого кешированными данными.
    Во втором - данные никак не изменятся и останутся в кеше с момента его обновления.
</p>

<?= Code::fromFile('@views/docs/code/template/param.cached.template.php');  ?>

<p>
    В примере для каждого отличающегося ID пользователя будет создан отдельный хеш по запросу, а для значения NULL будет отдаваться еще один вариант кеша.<br>
</p>

<p class="hl-danger-block">
    При любом сомнении в уместности кеширования шаблона, этого лучше не делать.
</p>


<?= Link::previousPage('docs.2.0.template.standard.page', 'Стандартные шаблоны'); ?>

<?= Link::nextPage('docs.2.0.template.twig.page', 'Шаблонизатор TWIG'); ?><br><br>

<?php insertTemplate('/docs/ru/authors'); ?>

<?php insertTemplate('/docs/ru/footer'); ?>
